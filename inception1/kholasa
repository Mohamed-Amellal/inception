now PID 1 is the first pid created when system stared, (init pid).
when parent process exit before child process PID 1 adpots childen.
we can say that pid 1 who protect from zombie process
and there is relation between docker daemon and pid because the daemon will be the init pid for container

docker daemon is responsible for management of docker objects like images network volumes.
it's work in backround and he listen to docker api request

for create a docker container first we need to creat image for this container when we run image we creat the container


YYYOUUU NEED TO READ THIS
*******************************************************************
When the Docker API receives a request from the Docker client, it parses the request and uses the information provided to perform a specific action on the Docker daemon.

Here's an overview of what happens when the Docker API receives a request from the Docker client:

The Docker client sends an HTTP request to the Docker API, specifying the endpoint and any required parameters.

The Docker API parses the request and verifies that it is valid according to the Docker API specification.

The Docker API forwards the request to the Docker daemon, along with any required parameters or data.

The Docker daemon receives the request and performs the requested action, such as starting a container or creating a new network.

The Docker daemon generates a response to the request, which includes any relevant data or information (such as the ID of a newly created container).

The Docker API receives the response from the Docker daemon and formats it according to the Docker API specification.

The Docker API sends the response back to the Docker client, which can then process the response and display any relevant information to the user.

In summary, the Docker API acts as a middleware layer between the Docker client and the Docker daemon, handling requests and responses between the two components and ensuring that they can communicate with each other in a standardized and reliable way.
*************************************************************
conclusion for realaion between daemon and client:
when we enter a command into client , client send request to daemon using docker api who is the link between client and daemon and send it back to client after parse it and performs requsted action (start of container). 
now we need to know what is nginx;
is webserver who handle http request between server cllient.

A client sends an HTTP request to the NGINX server.
NGINX receives the request and looks up the requested resource (e.g. a file, a script, or an API endpoint).
If the resource is a static file, NGINX serves the file directly from disk without the need for any additional software.
If the resource is a dynamic file (e.g. a PHP script), NGINX passes the request to a backend server that can process the request and generate a response.
NGINX receives the response from the backend server and sends it back to the client.


